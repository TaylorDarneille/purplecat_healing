{"version":3,"sources":["Nav.js","Home.js","About.js","Services.js","Main.js","Header.js","App.js","serviceWorker.js","index.js"],"names":["Nav","to","Home","id","className","About","Services","Main","path","Header","href","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4QAaeA,MAVf,WACE,OACC,6BACC,kBAAC,IAAD,CAAMC,GAAG,SAAT,QACA,kBAAC,IAAD,CAAMA,GAAG,aAAT,YACA,kBAAC,IAAD,CAAMA,GAAG,UAAT,iBCgCWC,MAtCf,WACE,OACD,yBAAKC,GAAG,OAAOC,UAAU,QACxB,uCACA,sCACS,sCADT,6BACoD,sCADpD,8CACgH,qCADhH,KAGA,sHAGA,iHAGA,2BACC,gGAED,yEAGA,oFAGA,qEAGA,qIAGA,mZAGA,yTCvBaC,MARf,WACE,OACD,yBAAKF,GAAG,QAAQC,UAAU,QACzB,4DCMaE,MATf,WACE,OACD,yBAAKH,GAAG,WAAWC,UAAU,QAC5B,wCACA,i6B,OC0BaG,MArBf,WACE,OACC,kBAAC,IAAD,KACD,0BAAMJ,GAAG,OAAOC,UAAU,WACzB,kBAAC,EAAD,MACA,kBAAC,IAAD,KACQ,kBAAC,IAAD,CAAOI,KAAK,SACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,aACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,UACV,kBAAC,EAAD,WCTEC,MAbf,WACE,OACE,4BAAQN,GAAG,YAAYC,UAAU,gBAC/B,oDACA,oEACA,yBAAKA,UAAU,QACb,4BAAI,uBAAGM,KAAK,wDAAR,cAEN,uBAAGP,GAAG,SAASO,KAAK,SAAQ,kCCKnBC,MAVf,WACE,OACE,yBAAKP,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,QCGcQ,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.1e1bde1f.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from \"react-router-dom\";\n\nfunction Nav() {\n  return (\n  \t<nav>\n  \t\t<Link to=\"/home\">Home</Link>\n  \t\t<Link to=\"/services\">Services</Link>\n  \t\t<Link to=\"/about\">About Misha</Link>\n  \t</nav>\n  );\n}\n\nexport default Nav;","import React from 'react';\n\nfunction Home() {\n  return (\n\t<div id=\"home\" className=\"main\">\n\t\t<h1>Welcome</h1>\n\t\t<p>\n\t\t\tYou are <span>here</span>. Please take a moment to <span>feel</span> into yourself. Where is your breath right <span>now</span>?\n\t\t</p>\n\t\t<p>\n\t\t\tIn order to let go and move into our current calling of body . mind . heart .  spirit -\n\t\t</p>\n\t\t<p>\n\t\t\tWe must first let in that which our patterning has us trying to escape and forget.\n\t\t</p>\n\t\t<p>\n\t\t\t<span>The inherent and intelligent presence of the body. Here. Now.</span>\n\t\t</p>\n\t\t<p>\n\t\t\tIn order to let in, we must first connect.\n\t\t</p>\n\t\t<p>\n\t\t\tIn order to connect, we must first take time to feel.\n\t\t</p>\n\t\t<p>\n\t\t\tIn order to feel we must be resourced.\n\t\t</p>\n\t\t<p>\n\t\t\tI am here to be in service to that resourcing with in  the body of your personal story and experience.\n\t\t</p>\n\t\t<p>\n\t\t\tI believe that the body and interconnected energetic intelligence has much to teach us; to help up heal, remember, renew and connect.   I believe that our wounds and shadows hold some of our most potent life force.  Through cultivated awareness, listening and a redirecting of patterning have more access to Self and the omnipotent intelligence we are part of is possible.\n\t\t</p>\n\t\t<p>\n\t\t\tTo bring our inner systems up to date and into current time is a deep and spacious process requiring intention, care and support.  I am here to support what is needing to move and what is needing to ground in order let your past and future selves and cells arrive to present time.\n\t\t</p>\n\t</div>\n  );\n}\n\nexport default Home;","import React from 'react';\n\nfunction About() {\n  return (\n\t<div id=\"about\" className=\"main\">\n\t\t<h1>Here's some about content!</h1>\n\t</div>\n  );\n}\n\nexport default About;","import React from 'react';\n\nfunction Services() {\n  return (\n\t<div id=\"services\" className=\"main\">\n\t\t<h1>BodyWork</h1>\n\t\t<p>The pillars of the Bodywork sessions are mindfulness and movement; an intentional and heart based approach to listening. Breath and a cultivation of trust.  Session are informed by form and anatomy yet driven by a deeper source born through breath, stillness and movement, and contact with the body in space. We cannot separate our bodies from our trauma but we can use the body as a doorway into relationship with trauma that allows for evolution and burgeons the possibility of living with more depth and clarity; less bound to that which we may not have chosen but ushers us towards embodied liberation and offers a deeper relationship to our bodies and to life; we can become agents for change both personally and collectively. Bodywork sessions include deep tissue work, joint manipulation, passive stretching, structural adjustments, jostling and energy work to move and settle the system. </p>\n\t</div>\n  );\n}\n\nexport default Services;","import React from 'react';\nimport Nav from './Nav.js';\nimport Home from './Home.js';\nimport About from './About.js';\nimport Services from './Services';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nfunction Main() {\n  return (\n  \t<Router>\n\t\t<main id=\"main\" className=\"section\">\n\t\t\t<Nav />\n\t\t\t<Switch>\n\t          <Route path=\"/home\">\n\t            <Home />\n\t          </Route>\n\t          <Route path=\"/services\">\n\t            <Services />\n\t          </Route>\n\t          <Route path=\"/about\">\n\t            <About />\n\t          </Route>\n\t        </Switch>\n\t\t</main>\n\t</Router>\n  );\n}\n\nexport default Main;","import React from 'react';\n\nfunction Header() {\n  return (\n    <header id=\"section03\" className=\"section demo\">\n      <h1>Misha Lilac LMP, RYT</h1>\n      <h2>Yoga. Meditation. Massage. Bodywork.</h2>\n      <div className=\"book\">\n        <h3><a href=\"https://squareup.com/appointments/book/5Z6Y1FC2CPY33\">Book Now</a></h3>\n      </div>\n      <a id=\"scroll\" href=\"#main\"><span></span></a>\n    </header>\n  );\n}\n\nexport default Header;","import React from 'react';\nimport './App.css';\nimport Main from './Main.js';\nimport Header from './Header.js';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Main />\n    </div>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'typeface-roboto';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}